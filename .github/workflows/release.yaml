name: Release

on:
  push:
  pull_request:
    branches:
      - main

concurrency: release

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    name: "Release Build"
    uses: ./.github/workflows/laravel-build.yaml
    with:
      cache_key: vendor-${{ github.sha }}

  test:
    name: "Release Unit Testing"
    needs: [build]
    uses: ./.github/workflows/laravel-unit-testing.yaml
    with:
      cache_key: vendor-${{ github.sha }}

  scan:
    name: "Release Code Scan"
    needs: [test]
    uses: ./.github/workflows/sonar-scan.yaml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      sonar_token: ${{ secrets.SONAR_TOKEN }}

  release:
    name: "Create Tag"
    needs: [scan]
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        name: Checkout the code to Runner

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Laravel docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.LARAVEL_IMAGE_REPO_NAME }}
          IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Build, tag, and push Nginx docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: ${{ secrets.NGINX_IMAGE_REPO_NAME }}
            IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG Dockerfile.nginx
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
