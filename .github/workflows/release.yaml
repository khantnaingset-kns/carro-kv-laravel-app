name: Release

on:
  pull_request_target:
    branches:
      - main
    types: closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  release:
    if: github.event.pull_request.merged == true
    name: "Create Release"
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        name: Checkout the code to Runner

      - name: Generate tarball from image for App
        run: |
          docker build -t app-laravel:scan-image .
          docker save -o app-laravel-scan-image.tar app-laravel:scan-image

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@master
        with:
          input: /github/workspace/app-laravel-scan-image.tar
          severity: "CRITICAL,HIGH"

      - name: Generate tarball from image for Web
        run: |
          docker build -t web-laravel:scan-image .
          docker save -o web-laravel-scan-image.tar web-laravel:scan-image

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@master
        with:
          input: /github/workspace/web-laravel-scan-image.tar
          severity: "CRITICAL,HIGH"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Laravel docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.LARAVEL_IMAGE_REPO_NAME }}
          IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push Nginx docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.NGINX_IMAGE_REPO_NAME }}
          IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./nginx
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
